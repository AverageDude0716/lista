{"version":3,"sources":["App.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","spreadsheetID","App","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","studentNumber","setStudentNumber","_useState5","_useState6","guild","setGuild","_useState7","_useState8","section","setSection","updateAttendance","_ref","asyncToGenerator","_callee","nameIndex","meetingDay","request","data","_context","fetch","concat","headers","Content-Type","Authorization","json","t0","t1","parseInt","console","log","body","JSON","stringify","requests","updateCells","rows","userEnteredValue","stringValue","range","startColumnIndex","endColumnIndex","endRowIndex","startRowIndex","fields","_x","apply","arguments","lastResult","useEffect","Html5Qrcode","start","facingMode","fps","qrbox","text","parsed","qrcodeContent","splitted","split","parseResult","errorMessage","react_default","a","createElement","react_onsenui","side","width","isSwipeable","collapse","renderToolbar","id","className","icon","align","startApp","ReactDOM","createRoot","document","getElementById","render","src_App","window","cordova","addEventListener"],"mappings":"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","file":"static/js/main.4289c320.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Html5Qrcode } from \"html5-qrcode\";\n\nimport * as Ons from \"react-onsenui\";\nimport \"onsenui/css/onsenui.css\";\nimport \"onsenui/css/onsen-css-components.css\";\n\nconst spreadsheetID = \"1BEdgdwItam2jOA9MGEhtexD3MqK21Y0mMxxBebvooO4\";\n// The access token changes every few minutes\nconst accessToken = \"TOKEN\";\n\n// Our main component\nconst App = () => {\n    // Name, guild, and section states that updates everytime QR Code is scanned\n    let [name, setName] = useState(\"\");\n    let [studentNumber, setStudentNumber] = useState(\"\");\n    let [guild, setGuild] = useState(\"\");\n    let [section, setSection] = useState(\"\");\n\n    // Separate name, guild, and section and return it as different variables\n    let parseResult = (qrcodeContent) => {\n        let splitted = qrcodeContent.split(\" [|] \"); // QR Code content example: Dela Cruz, Juan A. [|] Student No. [|] IREDOC [|] STEM1201\n        return {\n            name: splitted[0],\n            studentNumber: splitted[1],\n            guild: splitted[2],\n            section: splitted[3],\n        };\n    };\n\n    // TESTING NI ISHA\n    let updateAttendance = async (name) => {\n        // Name Index: Position of the Student's name in the Google Sheet\n        var nameIndex = 1;\n        const meetingDay = 3;\n\n        const request = await fetch(\n            `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetID}/values/A1:B194`,\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            }\n        );\n        const data = await request.json();\n\n        // Finding and getting the position of the Student's name\n        for (var i in data[\"values\"]) {\n            if (data[\"values\"][i][1] === name) {\n                nameIndex = parseInt(i) + 1;\n                console.log(\"Located at Column 1, Row \" + nameIndex);\n\n                fetch(\n                    `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetID}:batchUpdate`,\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            //update this token with yours.\n                            Authorization: `Bearer ${accessToken}`,\n                        },\n\n                        body: JSON.stringify({\n                            requests: [\n                                {\n                                    updateCells: {\n                                        rows: [\n                                            {\n                                                values: [\n                                                    {\n                                                        userEnteredValue: {\n                                                            stringValue:\n                                                                \"ATTENDED\",\n                                                        },\n                                                    },\n                                                ],\n                                            },\n                                        ],\n                                        range: {\n                                            // Change Meeting Day\n                                            startColumnIndex: meetingDay + 2,\n                                            endColumnIndex: meetingDay + 3,\n                                            endRowIndex: nameIndex,\n                                            startRowIndex: nameIndex - 1,\n                                        },\n                                        fields: \"*\",\n                                    },\n                                },\n                            ],\n                        }),\n                    }\n                );\n                return;\n            }\n        }\n\n        console.log(\"Couldn't Find Name\");\n        console.log(data);\n        return data;\n    };\n    // Variable to compare the last result to the recent QR code\n    let lastResult = \"\";\n\n    // useEffect() means if this component is rendered (shown to the user)\n    useEffect(() => {\n        const html5QrCode = new Html5Qrcode(\"reader\"); // Use the div with id 'reader' as our QR Code Reader\n        const config = { fps: 10, qrbox: 200 }; //  QR Code Reader configurations\n\n        // Start reader using back camera\n        html5QrCode\n            .start(\n                { facingMode: \"environment\" },\n                config,\n                (text, result) => {\n                    // Parse QR Code content and update our states\n                    let parsed = parseResult(text);\n\n                    setName(parsed.name);\n                    setStudentNumber(parsed.studentNumber);\n                    setGuild(parsed.guild);\n                    setSection(parsed.section);\n\n                    //This conditions stops the application from updating the spreadsheet when showing the same QR code\n                    if (text !== lastResult) {\n                        lastResult = text;\n\n                        updateAttendance(parsed.name);\n                    }\n                },\n                (errorMessage) => {\n                    // If scan has error, this block will execute\n                    console.log(errorMessage);\n                }\n            )\n            .catch((err) => {\n                // This block will execute if the app has trouble starting the camera\n                console.log(err);\n            });\n    }, []);\n\n    // Render all visible parts of our app, place all (HTML) contents here\n    return (\n        <Ons.Page>\n            <Ons.Splitter>\n                <Ons.SplitterSide\n                    side=\"left\"\n                    width={\"300\"}\n                    isSwipeable={true}\n                    collapse={true}>\n\n                    <Ons.Page> Page Left </Ons.Page>\n                </Ons.SplitterSide>\n\n                <Ons.SplitterContent>\n                    <Ons.Page\n                        renderToolbar={() => (\n                            <Ons.Toolbar id=\"toolbar\">\n                                <div className=\"left\">\n                                    <div className=\"sidebyside\">\n                                        <Ons.Icon icon=\"md-menu\"></Ons.Icon>\n                                        <span id=\"toolbar-title\">Lista</span>\n                                    </div>\n                                </div>\n                            </Ons.Toolbar>\n                        )}>\n\n                        <br /><br />\n\n                        <div id=\"reader\"></div>\n\n                        <br /><br /><hr />\n\n                        {/* Display QR Code content. This is a temporary proof of concept\n                            QR Code content should be synced to google sheets */}\n                        <div align=\"center\" id=\"student-information\">\n                            <h2 className=\"title\" align=\"center\">Student Information</h2>\n\n                            <p id=\"name\">Name: {name}</p>\n                            <p id=\"student-number\">Student number: {studentNumber}</p>\n                            <p id=\"guild\">Guild: {guild}</p>\n                            <p id=\"section\">Section: {section}</p>\n                        </div>\n                    </Ons.Page>\n                </Ons.SplitterContent>\n            </Ons.Splitter>\n        </Ons.Page>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\n\n// Don't make any changes here! This script just initializes our main component and starts it\n\nconst startApp = () => {\n\tconst root = ReactDOM.createRoot(document.getElementById('root'));\n\troot.render(<App />);\n};\n\n// Check if this is on Cordova Application then add an event listener for device ready first\n// Else just start the app\nif(window.cordova) {\n\tdocument.addEventListener('deviceready', startApp, false);\n} else {\n\tstartApp();\n}\n"],"sourceRoot":""}