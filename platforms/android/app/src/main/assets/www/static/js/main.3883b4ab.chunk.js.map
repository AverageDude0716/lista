{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","guild","setGuild","_useState5","_useState6","section","setSection","useEffect","Html5Qrcode","start","facingMode","fps","qrbox","text","result","parsed","qrcodeContent","splitted","split","parseResult","errorMessage","console","log","catch","err","react_default","a","createElement","id","align","startApp","ReactDOM","createRoot","document","getElementById","render","src_App","window","cordova","addEventListener"],"mappings":"+KAmEeA,EA/DH,WACR,IAAAC,EACsBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAAAK,EACMN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EACQV,mBAAS,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAsCxB,OAzBAG,oBAAU,WACc,IAAIC,IAAY,UAIxBC,MAAM,CAAEC,WAAY,eAHjB,CAAEC,IAAK,EAAGC,MAAO,KAI5B,SAACC,EAAMC,GAEH,IAAIC,EAlBE,SAACC,GACf,IAAIC,EAAWD,EAAcE,MAAM,SACnC,MAAO,CACHrB,KAAMoB,EAAS,GACfhB,MAAOgB,EAAS,GAChBZ,QAASY,EAAS,IAaDE,CAAYN,GAEzBf,EAAQiB,EAAOlB,MACfK,EAASa,EAAOd,OAChBK,EAAWS,EAAOV,UAEtB,SAACe,GAEGC,QAAQC,IAAIF,KAElBG,MAAM,SAACC,GAELH,QAAQC,IAAIE,OAMhBC,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAQ,SAKhBH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAIRH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UACPJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,QAAS/B,GACf4B,EAAAC,EAAAC,cAAA,KAAGC,GAAG,SAAU3B,GAChBwB,EAAAC,EAAAC,cAAA,KAAGC,GAAG,WAAYvB,MCtD5ByB,EAAW,WACHC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOV,EAAAC,EAAAC,cAACS,EAAG,QAKdC,OAAOC,QACTL,SAASM,iBAAiB,cAAeT,GAAU,GAEnDA","file":"static/js/main.3883b4ab.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Html5Qrcode } from \"html5-qrcode\";\n\n// Our main component\nconst App = () => {\n    // Name, guild, and section states that updates everytime QR Code is scanned\n    let [name, setName] = useState(\"\");\n    let [guild, setGuild] = useState(\"\");\n    let [section, setSection] = useState(\"\");\n\n    // Separate name, guild, and section and return it as different variables\n    let parseResult = (qrcodeContent) => {\n        let splitted = qrcodeContent.split(\" [|] \");  // QR Code content example: Dela Cruz, Juan A. [|] IREDOC [|] STEM1201\n        return {\n            name: splitted[0],\n            guild: splitted[1],\n            section: splitted[2]\n        }\n    }\n\n    // useEffect() means if this component is rendered (shown to the user)\n    useEffect(() => {\n        const html5QrCode = new Html5Qrcode(\"reader\");  // Use the div with id 'reader' as our QR Code Reader\n        const config = { fps: 1, qrbox: 250 };  //  QR Code Reader configurations\n\n        // Start reader using back camera\n        html5QrCode.start({ facingMode: \"environment\" }, config,\n            (text, result) => {\n                // Parse QR Code content and update our states\n                let parsed = parseResult(text);\n\n                setName(parsed.name);\n                setGuild(parsed.guild);\n                setSection(parsed.section);\n            },\n            (errorMessage) => {\n                // If scan has error, this block will execute\n                console.log(errorMessage);\n            }\n        ).catch((err) => {\n            // This block will execute if the app has trouble starting the camera\n            console.log(err);\n        });\n    });\n\n    // Render all visible parts of our app, place all (HTML) contents here\n    return (\n        <div>\n            {/* The topbar. We can add menu buttons and/or settings button here */}\n            <div id=\"topbar\">\n                Lista\n            </div>\n\n            {/* The camera. We don't need to touch this */}\n            <div id=\"reader\"></div>\n\n            {/* Display QR Code content. This is a temporary proof of concept\n                QR Code content should be synced to google sheets */}\n            <div align=\"center\">\n                <p id=\"name\">{ name }</p>\n                <p id=\"guild\">{ guild }</p>\n                <p id=\"section\">{ section }</p>\n            </div>\n        </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n// Don't make any changes here! This script just initializes our main component and starts it\n\nconst startApp = () => {\n\tconst root = ReactDOM.createRoot(document.getElementById('root'));\n\troot.render(<App />);\n};\n\n// Check if this is on Cordova Application then add an event listener for device ready first\n// Else just start the app\nif(window.cordova) {\n\tdocument.addEventListener('deviceready', startApp, false);\n} else {\n\tstartApp();\n}\n"],"sourceRoot":""}