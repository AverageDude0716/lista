{"version":3,"sources":["App.js","index.js"],"names":["App","onScanSuccess","decodedText","decodedResult","console","log","concat","onScanFailure","error","warn","useEffect","Html5QrcodeScanner","fps","qrbox","width","height","render","react_default","a","createElement","id","startApp","ReactDOM","createRoot","document","getElementById","src_App","window","cordova","addEventListener"],"mappings":"wKA6BeA,EA1BH,WACR,SAASC,EAAcC,EAAaC,GAEhCC,QAAQC,IAAG,kBAAAC,OAAmBJ,GAAeC,GAGjD,SAASI,EAAcC,GAGnBJ,QAAQK,KAAI,qBAAAH,OAAsBE,IAYtC,OATAE,oBAAU,WACmB,IAAIC,IACzB,SACA,CAAEC,IAAK,GAAIC,MAAO,CAACC,MAAO,IAAKC,OAAQ,OACxB,GAEAC,OAAOf,EAAeM,KAIzCU,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YCpBVC,EAAW,WACHC,IAASC,WAAWC,SAASC,eAAe,SACpDT,OAAOC,EAAAC,EAAAC,cAACO,EAAG,QAGdC,OAAOC,QACTJ,SAASK,iBAAiB,cAAeR,GAAU,GAEnDA","file":"static/js/main.ff3810eb.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Html5QrcodeScanner} from \"html5-qrcode\";\n\nconst App = () => {\n    function onScanSuccess(decodedText, decodedResult) {\n        // handle the scanned code as you like, for example:\n        console.log(`Code matched = ${decodedText}`, decodedResult);\n    }\n\n    function onScanFailure(error) {\n        // handle scan failure, usually better to ignore and keep scanning.\n        // for example:\n        console.warn(`Code scan error = ${error}`);\n    }\n\n    useEffect(() => {\n        let html5QrcodeScanner = new Html5QrcodeScanner(\n            \"reader\",\n            { fps: 10, qrbox: {width: 250, height: 250} },\n            /* verbose= */ false);\n\n        html5QrcodeScanner.render(onScanSuccess, onScanFailure);\n    });\n\n    return (\n        <div id=\"reader\"></div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst startApp = () => {\n\tconst root = ReactDOM.createRoot(document.getElementById('root'));\n\troot.render(<App />);\n};\n\nif(window.cordova) {\n\tdocument.addEventListener('deviceready', startApp, false);\n} else {\n\tstartApp();\n}\n"],"sourceRoot":""}